<?php

/**
 * @file
 * Convert File Handler that will convert using REST API from convertapi.com.
 */

define('CF_CONVERTAPI_TEXT2PDF', 'http://do.convertapi.com/text2pdf');
define('CF_CONVERTAPI_WORD2PDF', 'http://do.convertapi.com/word2pdf');

/**
 * Implements of hook_menu().
 */
function cf_convertapi_menu() {
  // Provide a page to handle watchdog error messages.
  $items['admin/config/convertfile/settings/handler/convertapi'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => 'ConvertAPI.com',
    'description' => 'Convert files online with REST API from ConvertAPI.com',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cf_convertapi_form'),
    'access arguments' => array('administer convertfile settings'),
    'file' => 'cf_convertapi.admin.inc',
    'file path' => drupal_get_path('module', 'cf_convertapi'),
    'weight' => 40,
  );

  return $items;
}

/**
 * Implements hook_convertfile_info().
 *
 * Register our handler and formats with convertfile module.
 */
function cf_convertapi_convertfile_info() {
  $types = array(
    'pdf' => '.pdf (application/pdf)',
  );

  return array(
    'cf_convertapi' => array(
      'name' => 'ConvertAPI.com',
      'callback' => 'cf_convertapi_do_conversion',
      'types' => $types,
    ),
  );
}

/**
 * File conversion callback.
 *
 * @param stdClass $file
 *   File object that is being readied to be moved from temporary server
 *   upload bin.
 * @param array $instance
 *   Field instance that this file was submitted to.
 *
 * @return bool
 *   TRUE if conversion was success, FALSE otherwise. In the event of a
 *   failure $file->convertfile_error should be set with an error message.
 *
 * @see cf_convertapi_convertfile_info()
 */
function cf_convertapi_do_conversion($file, $instance) {
  $report = FALSE;
  $settings = $instance['widget']['settings'];
  $dir = pathinfo($file->uri, PATHINFO_DIRNAME);
  $base = pathinfo($file->filename, PATHINFO_FILENAME);
  $ext = pathinfo($file->filename, PATHINFO_EXTENSION);
  $key = variable_get('cf_convertapi_api_key');
  $message = NULL;

  if ($ext == 'txt') {
    $type = CF_CONVERTAPI_TEXT2PDF;
  }
  if ($ext == 'doc' || $ext == 'docx') {
    $type = CF_CONVERTAPI_WORD2PDF;
  }

  module_load_include('inc', 'cf_convertapi', 'cf_convertapi.api');
  if ($type && ($blob = cf_convertapi_api_call($file->uri, $key, $type, $message))) {
    $fp = fopen($file->uri, "wbx");
    if (fwrite($fp, $blob)) {
      $ext_new = 'pdf';
      $file->filename = $base . '.' . $ext . '.' . $ext_new;
      $file->filesize = filesize($file->uri);
      $file->filemime = file_get_mimetype($file->filename);
      $file->destination = $file->destination . '.' . $ext_new;
      $report = TRUE;
    }
    else {
      $file->convertfile_error = 'ConvertAPI could not write file to disk.';
    }
  }
  else {
    $file->convertfile_error = "ConvertAPI could not convert file: {$message}.";
  }

  return $report;
}
